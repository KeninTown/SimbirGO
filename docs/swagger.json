{
    "swagger": "2.0",
    "info": {
        "description": "Server for transport booking",
        "title": "SimbirGO REST API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Alexander Soldatov",
            "email": "soldatovalex207z@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:80",
    "basePath": "/",
    "paths": {
        "/api/Account/Me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Просмотр информации о текущем авторизованном аккаунте",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AccountController"
                ],
                "summary": "Просмотр данных текущего аккаунта",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Account/SignIn": {
            "post": {
                "description": "Вход в аккаунт пользователя с использованием имени пользователя - username и паролем - password и получение jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AccountController"
                ],
                "summary": "Вход в аккаунт",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authHandler.UserSignIn.userCreadentials"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Account/SignOut": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Внесение текущего используемого токена доступа в черный список токенов",
                "tags": [
                    "AccountController"
                ],
                "summary": "Выход из аккаунта",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Account/SignUp": {
            "post": {
                "description": "Регистрация пользовате и получение jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AccountController"
                ],
                "summary": "Регистрация",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authHandler.UserSignUp.userData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Account/Update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновление данных аккаунта username и password.\nПри смене одного из данных параметров требуется указать текущее значение другого параметра.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AccountController"
                ],
                "summary": "Обновление данных аккаунта",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authHandler.UserUpdate.userData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authHandler.UserUpdate.userData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Account": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возращает информацию о count аккаунтах пользователей начиная с id = start",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Получение данных пользователей",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "start",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание нового пользователя с указанными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Создание нового пользователя",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authHandler.AdminCreateUser.userData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Account/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о пользователе с id = {id}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Получение информации о пользователе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновление данных пользователя с id={id}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Обновление данных пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "requset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authHandler.AdminUpdateUser.userData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаление данных пользователя с id={id}",
                "tags": [
                    "AdminAccountController"
                ],
                "summary": "Удаление пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Rent": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание аренды транспорта с id = transportId пользователем с id = userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Создание новой аренды",
                "parameters": [
                    {
                        "description": "Rent data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rentHandler.AdminCreateRent.rentData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Rent/End/{rentId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Завершение аренды с id = {rentId}.\nПроисходит рассчет итоговой суммы аренды и если она оказывается больше, чем сумма на счете пользователя, то в завершить аренду нельзя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Завершение аренды",
                "parameters": [
                    {
                        "type": "number",
                        "description": "lat",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "long",
                        "name": "long",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rent id",
                        "name": "rentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Rent/{rentId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение информации об аренде с id = {rentId}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Информации об аренде",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rent id",
                        "name": "rentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновление информации об аренде с id = {rentId}\nЕсли в обновлении аренды указывается дата ее окончания, то аренда считается завершенной.\nПроисходит рассчет итоговой суммы аренды и если она оказывается больше, чем сумма на счете пользователя, то обновить аренду нельзя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Обновление аренды",
                "parameters": [
                    {
                        "description": "Rent data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rentHandler.AdminUpdateRent.rentData"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Rent id",
                        "name": "rentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаление аренды с id = {rentId}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "Удаление аренды",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rent id",
                        "name": "rentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Transport": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение count транспортных средств с id \u003e= start и с типом транспорта transportType",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Информация о транспортных средствах",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "start",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "Car",
                            "Bike",
                            "Scooter"
                        ],
                        "type": "string",
                        "description": "transportType",
                        "name": "transportType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Transport"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание транспортного средства. При создании указывается id владельца транспортного средства - ownerId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Создание транспортного средства",
                "parameters": [
                    {
                        "description": "Transport data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transportHandler.AdminCreateTransport.transportData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Transport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/Transport/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение информации о транспортном средстве с id = {id}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Информация о транспортном средстве",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Transport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновление информации о транспортном средстве с id = {id}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Обновление транспортного средства",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transport data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transportHandler.AdminUpdateTransport.transportData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Transport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаление информации о транспортном средстве с id = {id}",
                "tags": [
                    "AdminTransportController"
                ],
                "summary": "Удаление транспортного средства",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/TransportHistory/{transportId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение информации обо всех арендах транспорта с id = {transportId}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "История аренды транспорта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "transportId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Rent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Admin/UserHistory/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение информации обо всех арендах пользователем с id = {userId}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminRentController"
                ],
                "summary": "История аренды пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Rent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Payment/Hesoyam/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Пополняет баланс пользователся с id = {id} на 250 000.\nАдминистраторы могут пополнять баланс любому пользователю, обычные пользователи только себе.",
                "tags": [
                    "PaymentController"
                ],
                "summary": "Пополнение баланса",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Rent/End/{rentId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Окончание аренды транспорта с id = {transportid}.\nПроисходит рассчет итоговой суммы аренды и если она оказывается больше, чем сумма на счете пользователя, то в завершить аренду нельзя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RentController"
                ],
                "summary": "Окончание аренды",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "rentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "lat",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "long",
                        "name": "long",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Rent/MyHistory": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение данных всех аренд текущего авторизованного пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RentController"
                ],
                "summary": "Истории аренды пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Rent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Rent/New/{transportId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание новой аредны транспорта с id = {transportid}.\nВ параметра rentType указывается тип аренды: [Minutes, Days].",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RentController"
                ],
                "summary": "Создание новой аренды транспорта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "transportId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "Minutes",
                            "Days"
                        ],
                        "type": "string",
                        "description": "Rent type: [Minutes, Days]",
                        "name": "rentType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Rent/Transport": {
            "get": {
                "description": "Получение информации о транспорте, доступного для аренды по месту его расположения и типу.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RentController"
                ],
                "summary": "Доступный транспорт для аренды",
                "parameters": [
                    {
                        "type": "number",
                        "description": "географическая широта",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "радиус поиска",
                        "name": "radius",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "географическая долгота",
                        "name": "long",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "All",
                            "Car",
                            "Bike",
                            "Scooter"
                        ],
                        "type": "string",
                        "description": "transportType",
                        "name": "transportType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Transport"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Rent/TransportHistory/{transportId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение данных обо всех арендах транспорта с id = {transportId}.\nДанные может получить только владелец транспорта.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RentController"
                ],
                "summary": "Истории аренды транспорта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "transportId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Rent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Rent/{rentid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение данных аренды с id = {rentid}. Данные могут получить только арендатор и арендодатель.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RentController"
                ],
                "summary": "Получение аренды пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rent id",
                        "name": "rentid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Transport": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание транспорта у текущего авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransportController"
                ],
                "summary": "Создаение транспорта",
                "parameters": [
                    {
                        "description": "Transport data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transportHandler.UserCreateTransport.transportData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/transportHandler.UserCreateTransport.responseData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/Transport/{id}": {
            "get": {
                "description": "Просмотр информации о транспорте с id = {id}",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransportController"
                ],
                "summary": "Получение информации о транспотре",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transportHandler.UserGetTransport.transportData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновление информации о транспорте с id = {id}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransportController"
                ],
                "summary": "Обновление информации о транспотре",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transport data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transportHandler.UserUpdateTransport.transportData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transportHandler.UserUpdateTransport.responseData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаление транспорта с id = {id}. Удалить данные о транспорте может только владелец транспорта.",
                "tags": [
                    "TransportController"
                ],
                "summary": "Удаление транспорта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transport id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpUtil.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authHandler.AdminCreateUser.userData": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authHandler.AdminUpdateUser.userData": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authHandler.UserSignIn.userCreadentials": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authHandler.UserSignUp.userData": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authHandler.UserUpdate.userData": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entities.Rent": {
            "type": "object",
            "properties": {
                "finalPrice": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "priceOfUnit": {
                    "type": "number"
                },
                "priceType": {
                    "type": "string",
                    "enum": [
                        "Minutes",
                        " Days"
                    ]
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "transportId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "entities.Transport": {
            "type": "object",
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string",
                    "enum": [
                        "Car",
                        " Scooter",
                        " Bike"
                    ]
                }
            }
        },
        "entities.User": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "httpUtil.ResponseError": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string",
                    "example": "error occures"
                }
            }
        },
        "rentHandler.AdminCreateRent.rentData": {
            "type": "object",
            "required": [
                "priceOfUnit",
                "priceType",
                "timeStart",
                "transportId",
                "userId"
            ],
            "properties": {
                "priceOfUnit": {
                    "type": "number"
                },
                "priceType": {
                    "type": "string"
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "transportId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "rentHandler.AdminUpdateRent.rentData": {
            "type": "object",
            "required": [
                "priceOfUnit",
                "priceType",
                "timeStart",
                "transportId",
                "userId"
            ],
            "properties": {
                "priceOfUnit": {
                    "type": "number"
                },
                "priceType": {
                    "type": "string"
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "transportId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "transportHandler.AdminCreateTransport.transportData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "model",
                "ownerId",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "transportHandler.AdminUpdateTransport.transportData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "model",
                "ownerId",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "transportHandler.UserCreateTransport.responseData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "transportHandler.UserCreateTransport.transportData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "transportHandler.UserGetTransport.transportData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "transportHandler.UserUpdateTransport.responseData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "transportHandler.UserUpdateTransport.transportData": {
            "type": "object",
            "required": [
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "transportType": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}